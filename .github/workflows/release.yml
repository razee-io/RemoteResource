name: Build and Test Release Action

# Controls when the action will run.
on:
  # Triggers the workflow on Release type published
  release:
    types: [released]

# env variable
env:
  NPMJS_EMAIL: ${{secrets.NPMJSEMAIL}}
  NPMJS_API_KEY: ${{secrets.NPMJSAPIKEY}}
  QREPOURL: ${{secrets.QREPOURL}}  
  
  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
   
 # This workflow contains a two jobs called "build"
  build:
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

     
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    # Runs a set of commands using the runners shell
    - name: Build the Docker image
      run: |
         docker build . --file Dockerfile --rm -t "${QREPOURL}:${GITHUB_SHA}"
         docker images
         IMAGE_ID=${QREPOURL}:${GITHUB_SHA}
         VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
         [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
         [ "$VERSION" == "master" ] && VERSION=latest
         echo IMAGE_ID=$IMAGE_ID
         echo VERSION=$VERSION
         docker tag ${QREPOURL}:${GITHUB_SHA} ${QREPOURL}:${VERSION}
         ./build/process-template.sh kubernetes/RemoteResource/resource.yaml >/tmp/resource.yaml
   
   #Publish to npm registry
     
  publish-npm:

    needs: build
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
          scope: '@testtasneem' 
    - run: git config user.email "${NPMJS_EMAIL}"
    - run: npm ci
    - run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPMJSAPIKEY}}
