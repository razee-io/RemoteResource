name: Release and Prerelease

#on:
  #release:
    #types: [prereleased]

on:
  push:
    tags:
     - '^[0-9]+.[0-9]+.[0-9]$'
     - '^[0-9]+.[0-9]+.[0-9]+_[0-9]{3}$'
    
env:
  USERNAME: ${{secrets.QUSERNAME}}
  PASSWORD: ${{secrets.QPASSWORD}}
  QREPOURL: ${{secrets.QREPOURL}}
 

jobs:
  check_Prerelease_tag:
    runs-on: ubuntu-latest
    outputs:
      run_other_jobs: ${{ steps.check-tag.outputs.match }}
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ steps.get_version.outputs.VERSION }} =~ ^[0-9]+.[0-9]+.[0-9]+$ || ${{ steps.get_version.outputs.VERSION }} =~ ^[0-9]+.[0-9]+.[0-9]+_[0-9]{3}$ ]]; then
            echo ::set-output name=match::true
          else
            exit 1
          fi

  pre-release_build:
    
    needs: [check_Prerelease_tag]
    if: needs.check_tag.outputs.run_other_jobs == 'true'
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image 
        run: |
          docker build . --file Dockerfile --rm -t "${QREPOURL}:${GITHUB_SHA}"
          docker login -u="${USERNAME}" -p="${PASSWORD}" quay.io
          docker push "${QREPOURL}:${GITHUB_SHA}"
 
 
  check_release_tag:
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.check-tag.outputs.match }}
    steps:
      - name: check tag ${{ github.ref }}
        id: check-tag
        run: |
          echo ${{ github.ref }}
          if [[ ${{ github.ref }} =~ ^refs\/tags\/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::set-output name=match::true"
          else
            echo "::set-output name=match::false"
            exit 1
          fi
 
 
  release-build:
    
    needs: [check_release_tag]
    if: needs.check_tag.outputs.run_job == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: |
         docker build . --file Dockerfile --rm -t "${QREPOURL}:${GITHUB_SHA}"
         docker images
         IMAGE_ID=${QREPOURL}:${GITHUB_SHA}
         VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
         [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
         [ "$VERSION" == "master" ] && VERSION=latest
         docker tag ${QREPOURL}:${GITHUB_SHA} ${QREPOURL}:${VERSION}
         ./build/process-template.sh kubernetes/RemoteResource/resource.yaml >/tmp/resource.yaml
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
          scope: '@testtasneem' 
      - name: publish npm
        run: |
            npm ci
            npm publish --access public
            env:
            NODE_AUTH_TOKEN: ${{secrets.NPMJSAPIKEY}}
   

